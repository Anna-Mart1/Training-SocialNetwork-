{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","components/Profile/MyPosts/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/PfofileStatusWithHooks.jsx","components/Profile/MyPosts/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Pfofile.jsx","components/Profile/ProfileContainer.jsx"],"names":["_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","unsupportedIterableToArray","TypeError","module","exports","ProfileStatusWithHooks","props","useState","EditMode","setEditMode","status","setStatus","toggleEditMode","updateStatus","useEffect","onSubmit","handleSubmit","onDoubleClick","onBlur","autoFocus","onChange","e","currentTarget","ProfileInfo","profile","src","alt","className","s","top_bar","descriptionblock","photos","large","Post","item","message","like","maxLength20","maxLength","NewPostReduxForm","reduxForm","form","Field","placeholder","component","Textarea","name","validate","required","MyPosts","console","log","myPosts","values","onAddPost","newPostText","posts","map","p","likesCounts","MyPostsContainer","connect","state","profilePage","dispatch","addPostActionCreator","Profile","store","ProfileContainer","userId","this","match","params","authorizedUserId","history","showProfile","getUserStatus","React","Component","compose","auth","isAuth","setUserProfiles","withRouter"],"mappings":"sJAIe,SAASA,EAAeC,EAAKC,GAC1C,OCLa,SAAyBD,GACtC,GAAIE,MAAMC,QAAQH,GAAM,OAAOA,EDIxB,CAAeA,IELT,SAA+BA,EAAKC,GACjD,GAAsB,qBAAXG,QAA4BA,OAAOC,YAAYC,OAAON,GAAjE,CACA,IAAIO,EAAO,GACPC,GAAK,EACLC,GAAK,EACLC,OAAKC,EAET,IACE,IAAK,IAAiCC,EAA7BC,EAAKb,EAAII,OAAOC,cAAmBG,GAAMI,EAAKC,EAAGC,QAAQC,QAChER,EAAKS,KAAKJ,EAAGK,QAEThB,GAAKM,EAAKW,SAAWjB,GAH8CO,GAAK,IAK9E,MAAOW,GACPV,GAAK,EACLC,EAAKS,EACL,QACA,IACOX,GAAsB,MAAhBK,EAAW,QAAWA,EAAW,SAC5C,QACA,GAAIJ,EAAI,MAAMC,GAIlB,OAAOH,GFnBuB,CAAqBP,EAAKC,IAAM,OAAAmB,EAAA,GAA2BpB,EAAKC,IGLjF,WACb,MAAM,IAAIoB,UAAU,6IHIgF,K,oBIJtGC,EAAOC,QAAU,CAAC,KAAO,0BAA0B,iBAAmB,sCAAsC,QAAU,+B,oBCAtHD,EAAOC,QAAU,CAAC,KAAO,sBAAsB,QAAU,yBAAyB,MAAQ,yB,oBCA1FD,EAAOC,QAAU,CAAC,KAAO,qB,uIC6BVC,EA3BgB,SAACC,GAAW,IAAD,EAERC,oBAAS,GAFD,mBAEjCC,EAFiC,KAEvBC,EAFuB,OAGZF,mBAASD,EAAMI,QAHH,mBAGjCA,EAHiC,KAGzBC,EAHyB,KAKhCC,EAAiB,WACnBH,GAAaD,GACRA,GAAYF,EAAMO,aAAaH,IASxC,OAFAI,qBAAU,WAAOH,EAAUL,EAAMI,UAAS,CAACJ,EAAMI,SAE1C,0BAAMK,SAAUT,EAAMU,cACxBR,EACK,0BAAMS,cAAeL,GAArB,IAAuCN,EAAMI,OAA7C,KACA,2BAAOQ,OAAQN,EACRO,WAAW,EACXC,SAXM,SAACC,GACpBV,EAAUU,EAAEC,cAAcxB,QAWbA,MAAOY,MCAba,EApBK,SAAC,GAAqC,IAApCb,EAAmC,EAAnCA,OAAQG,EAA2B,EAA3BA,aAAcW,EAAa,EAAbA,QACxC,OAAKA,EAID,6BACI,6BACI,yBAAKC,IAAI,4EACJC,IAAI,GACJC,UAAWC,IAAEC,WAEtB,yBAAKF,UAAWC,IAAEE,kBACd,yBAAKL,IAAKD,EAAQO,OAAOC,MAAON,IAAI,MAExC,kBAAC,EAAD,CAAwBhB,OAAQA,EACjBG,aAAcA,KAb1B,kBAAC,IAAD,O,4CCQAoB,EAZF,SAAC3B,GACV,OACQ,6BACI,yBAAKqB,UAAWC,IAAEM,MACd,yBAAKT,IAAI,qGAAqGC,IAAI,KACjHpB,EAAM6B,SAEX,sCAAY7B,EAAM8B,Q,kCCH5BC,EAAcC,YAAU,IAgBxBC,EAAmBC,YAAU,CAACC,KAAM,eAAjBD,EAdL,SAAClC,GACjB,OACI,0BAAMS,SAAUT,EAAMU,cAClB,6BACI,kBAAC0B,EAAA,EAAD,CAAOC,YAAY,qBAAqBC,UAAWC,IAAUC,KAAM,cACnEC,SAAU,CAACC,IAAUX,MAEzB,6BACI,iDAyBDY,EAjBC,SAAC3C,GACb4C,QAAQC,IAAI,WAKZ,OAEI,yBAAKxB,UAAWC,IAAEwB,SAAlB,YACI,kBAACb,EAAD,CAAkBxB,SAPZ,SAACsC,GACX/C,EAAMgD,UAAUD,EAAOE,gBAOnB,yBAAK5B,UAAWC,IAAE4B,OACblD,EAAMkD,MAAMC,KAAI,SAAAC,GAAC,OAAI,kBAAC,EAAD,CAAMvB,QAASuB,EAAEvB,QAASC,KAAMsB,EAAEC,oBChB3DC,EAAmBC,aAbR,SAACC,GACrB,MAAO,CACHP,YAAaO,EAAMC,YAAYR,YAC/BC,MAAOM,EAAMC,YAAYP,UAIN,SAACQ,GACxB,MAAO,CACHV,UAAW,SAACC,GAAD,OAAiBS,EAASC,YAAqBV,QAIlCM,CAA6CZ,GCP9DiB,EATC,SAAC5D,GACb,OAAO,6BACH,kBAAC,EAAD,CAAakB,QAASlB,EAAMkB,QACfd,OAAQJ,EAAMI,OACdG,aAAcP,EAAMO,eACjC,kBAAC+C,EAAD,CAAkBO,MAAO7D,EAAM6D,U,wBCDjCC,E,kLAEE,IAAIC,EAASC,KAAKhE,MAAMiE,MAAMC,OAAOH,OAChCA,IACDA,EAASC,KAAKhE,MAAMmE,kBACjBJ,GAAUC,KAAKhE,MAAMoE,QAAQ7E,KAAK,UACzCyE,KAAKhE,MAAMqE,YAAYN,GAEvBC,KAAKhE,MAAMsE,cAAcP,K,+BAIzB,OACI,kBAAC,EAAD,CAAS7C,QAAS8C,KAAKhE,MAAMkB,QACpBd,OAAQ4D,KAAKhE,MAAMI,OACnBG,aAAcyD,KAAKhE,MAAMO,mB,GAffgE,IAAMC,WA2BtBC,sBACXlB,aAToB,SAACC,GAAD,MAAY,CAC5BtC,QAASsC,EAAMC,YAAYvC,QAC3Bd,OAAQoD,EAAMC,YAAYrD,OAC1B+D,iBAAkBX,EAAMkB,KAAKX,OAC7BY,OAAQnB,EAAMkB,KAAKC,UAKE,CAACC,oBAAiBP,gBAAaC,kBAAe/D,mBAEvEsE,IAHWJ,CAIbX","file":"static/js/3.e6533b1e.chunk.js","sourcesContent":["import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ProfileInfo_item__23ZKR\",\"descriptionblock\":\"ProfileInfo_descriptionblock__1Ae8E\",\"top_bar\":\"ProfileInfo_top_bar__qfycf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"MyPosts_item__12zyx\",\"myPosts\":\"MyPosts_myPosts__1hin_\",\"posts\":\"MyPosts_posts__1eFXh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__3OVkN\"};","import React, {useEffect, useState} from 'react';\r\n\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n    let [EditMode, setEditMode] = useState(true);\r\n    let [status, setStatus] = useState(props.status);\r\n\r\n    const toggleEditMode = () => {\r\n        setEditMode(!EditMode)\r\n        if (!EditMode) { props.updateStatus(status) }\r\n    }\r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value)\r\n    }\r\n\r\n    useEffect(() => {setStatus(props.status)},[props.status])\r\n\r\n    return <form onSubmit={props.handleSubmit}>\r\n        {EditMode\r\n            ? <span onDoubleClick={toggleEditMode}> {props.status} </span>\r\n            : <input onBlur={toggleEditMode}\r\n                     autoFocus={true}\r\n                     onChange={onStatusChange}\r\n                     value={status}\r\n            />}\r\n    </form>\r\n}\r\n\r\nexport default ProfileStatusWithHooks;","import React from 'react';\r\nimport s from './ProfileInfo.module.css';\r\nimport {Preloader} from '../../../common/preloader';\r\nimport ProfileStatusWithHooks from '../../PfofileStatusWithHooks';\r\n\r\nconst ProfileInfo = ({status, updateStatus, profile}) => {\r\n    if (!profile) {\r\n        return <Preloader/>\r\n    }\r\n    return (\r\n        <div>\r\n            <div>\r\n                <img src='https://www.freegreatpicture.com/files/199/387-three-wide-screen-vlad.jpg'\r\n                     alt=''\r\n                     className={s.top_bar}/>\r\n            </div>\r\n            <div className={s.descriptionblock}>\r\n                <img src={profile.photos.large} alt=''/>\r\n            </div>\r\n            <ProfileStatusWithHooks status={status}\r\n                           updateStatus={updateStatus}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileInfo;","import React from 'react';\r\nimport s from './Post.module.css';\r\n\r\nconst Post = (props) => {\r\n    return (\r\n            <div>\r\n                <div className={s.item}>\r\n                    <img src='https://i.pinimg.com/736x/0a/dd/87/0add874e1ea0676c4365b2dd7ddd32e3--james-cameron-james-darcy.jpg' alt=''/>\r\n                    {props.message}\r\n                </div>\r\n                <span>Like {props.like}</span>\r\n            </div>\r\n    )\r\n}\r\n\r\nexport default Post;","import React from 'react';\r\nimport s from './MyPosts.module.css';\r\nimport Post from './Post/Post';\r\nimport {Field, reduxForm} from 'redux-form';\r\nimport {Textarea} from '../../common/formsControl';\r\nimport {maxLength, required} from '../../common/validators';\r\n\r\nconst maxLength20 = maxLength(20);\r\n\r\nconst NewPostForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field placeholder='enter your message' component={Textarea} name={'newPostText'}\r\n                validate={[required, maxLength20]}/>\r\n            </div>\r\n            <div>\r\n                <button >Add post</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst NewPostReduxForm = reduxForm({form: 'newPostForm'})(NewPostForm)\r\n\r\nconst MyPosts = (props) => {\r\n    console.log('MyPosts')\r\n    let addPost = (values) => {\r\n        props.onAddPost(values.newPostText);\r\n    };\r\n\r\n    return (\r\n\r\n        <div className={s.myPosts}> my posts\r\n            <NewPostReduxForm onSubmit={addPost}/>\r\n            <div className={s.posts}>\r\n                {props.posts.map(p => <Post message={p.message} like={p.likesCounts}/>)}\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default MyPosts;","import React from 'react';\r\nimport {addPostActionCreator} from '../../../redux/profileReducer';\r\nimport MyPosts from './MyPosts';\r\nimport {connect} from 'react-redux';\r\n\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        newPostText: state.profilePage.newPostText,\r\n        posts: state.profilePage.posts,\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        onAddPost: (newPostText) => dispatch(addPostActionCreator(newPostText)),\r\n    }\r\n};\r\n\r\nexport const MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\n","import React from 'react';\r\nimport ProfileInfo from './MyPosts/ProfileInfo/ProfileInfo';\r\nimport {MyPostsContainer} from './MyPosts/MyPostsContainer';\r\n\r\nconst Profile = (props) => {\r\n    return <div>\r\n        <ProfileInfo profile={props.profile}\r\n                     status={props.status}\r\n                     updateStatus={props.updateStatus}/>\r\n        <MyPostsContainer store={props.store}/>\r\n    </div>\r\n}\r\n\r\nexport default Profile;","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport Profile from './Pfofile';\r\nimport {getUserStatus, setUserProfiles, showProfile, updateStatus} from '../../redux/profileReducer';\r\nimport {withRouter} from 'react-router-dom';\r\nimport {withAuthRedirect} from '../hoc/withAuthRedirect';\r\nimport {compose} from 'redux';\r\n\r\nclass ProfileContainer extends React.Component {\r\n    componentDidMount() {\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.authorizedUserId\r\n        } if (!userId) { this.props.history.push('/login')}\r\n        this.props.showProfile(userId)\r\n\r\n        this.props.getUserStatus(userId)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Profile profile={this.props.profile}\r\n                     status={this.props.status}\r\n                     updateStatus={this.props.updateStatus}/>)\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n        profile: state.profilePage.profile,\r\n        status: state.profilePage.status,\r\n        authorizedUserId: state.auth.userId,\r\n        isAuth: state.auth.isAuth\r\n    }\r\n);\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {setUserProfiles, showProfile, getUserStatus, updateStatus}),\r\n    /* withAuthRedirect,*/\r\n    withRouter,\r\n)(ProfileContainer)"],"sourceRoot":""}