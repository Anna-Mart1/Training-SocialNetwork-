{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Dialogs/DialogItem/DialogsItem.module.css","components/Dialogs/Message/Message.jsx","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","Message","props","className","s","message","item","DialogItem","dialog","src","alt","to","id","activeClassName","active","name","maxLength10","maxLength","NewMessageReduxForm","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","placeholder","validate","required","Dialogs","dialogs","dialogsItem","map","d","messages","m","values","onSendMessage","newMessageText","compose","connect","state","dialogsPage","onChangeNewMessage","withAuthRedirect"],"mappings":"2FACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,SAAW,0BAA0B,QAAU,yBAAyB,YAAc,+B,oBCA3ID,EAAOC,QAAU,CAAC,OAAS,4BAA4B,YAAc,iCAAiC,OAAS,8B,uFCYhGC,EAVC,SAACC,GACb,OACI,yBAAKC,UAAWC,IAAEC,SAClB,yBAAKF,UAAWC,IAAEE,MACbJ,EAAMG,W,0BCQJE,EAXI,SAACL,GAChB,OACI,yBAAKC,UAAWC,IAAEI,QACd,yBAAKC,IAAI,gEAAgEC,IAAI,KAC7E,kBAAC,IAAD,CAASC,GAAE,mBAAcT,EAAMU,IACtBC,gBAAiBT,IAAEU,QAASZ,EAAMa,Q,kCCDjDC,EAAcC,YAAU,IAiBxBC,EAAsBC,YAAU,CAACC,KAAM,kBAAjBD,EAfL,SAACjB,GAEpB,OAAQ,0BAAMmB,SAAUnB,EAAMoB,cAC1B,6BACI,kBAACC,EAAA,EAAD,CAAOC,UAAWC,IACXC,YAAY,qBACZX,KAAM,iBACNY,SAAU,CAACC,IAAUZ,MAEhC,6BACI,8CA4BGa,EArBC,SAAC3B,GAMb,OACI,yBAAKC,UAAWC,IAAE0B,SACd,yBAAK3B,UAAWC,IAAE2B,aACb7B,EAAM4B,QAAQE,KAAI,SAAAC,GAAC,OAAI,kBAAC,EAAD,CAAYlB,KAAMkB,EAAElB,KAAMH,GAAIqB,EAAErB,SAG5D,yBAAKT,UAAWC,IAAE8B,UACbhC,EAAMgC,SAASF,KAAI,SAAAG,GAAC,OAAI,kBAAC,EAAD,CAASvB,GAAIuB,EAAEvB,GAAIP,QAAS8B,EAAE9B,aACvD,kBAACa,EAAD,CAAqBG,SAZf,SAACe,GACflC,EAAMmC,cAAcD,EAAOE,sB,wBCfpBC,sBACXC,aAToB,SAACC,GACrB,MAAO,CACHX,QAASW,EAAMC,YAAYZ,QAC3BI,SAAUO,EAAMC,YAAYR,SAC5BI,eAAgBG,EAAMC,YAAYJ,kBAKb,CACrBD,kBACAM,yBAEJC,IALWL,CAMZV","file":"static/js/5.36612269.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__3DYVK\",\"messages\":\"Dialogs_messages__1Fnwc\",\"message\":\"Dialogs_message__353fr\",\"dialogsItem\":\"Dialogs_dialogsItem__2M0of\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialog\":\"DialogsItem_dialog__1eWSt\",\"dialogsItem\":\"DialogsItem_dialogsItem__3PVAW\",\"active\":\"DialogsItem_active__3A9oQ\"};","import React from 'react';\r\nimport s from './../Dialogs.module.css';\r\n\r\nconst Message = (props) => {\r\n    return (\r\n        <div className={s.message}>\r\n        <div className={s.item}>\r\n            {props.message}\r\n        </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Message;","import React from 'react';\r\nimport s from './DialogsItem.module.css';\r\nimport {NavLink} from 'react-router-dom';\r\n\r\nconst DialogItem = (props) => {\r\n    return (\r\n        <div className={s.dialog}>\r\n            <img src='http://mythemestore.com/friend-finder/images/users/user-4.jpg' alt=''/>\r\n            <NavLink to={`/dialogs/${props.id}`}\r\n                     activeClassName={s.active}>{props.name}\r\n            </NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DialogItem;","import React from 'react';\r\nimport s from './Dialogs.module.css';\r\nimport Message from './Message/Message';\r\nimport DialogItem from './DialogItem/DialogItem';\r\nimport {Field, reduxForm} from 'redux-form';\r\nimport {maxLength, required} from '../common/validators';\r\nimport {FormControl, Textarea} from '../common/formsControl';\r\n\r\nconst maxLength10 = maxLength(10)\r\n\r\nconst NewMessageForm = (props) => {\r\n\r\n    return (<form onSubmit={props.handleSubmit}>\r\n        <div>\r\n            <Field component={Textarea}\r\n                   placeholder='enter your message'\r\n                   name={'newMessageText'}\r\n                   validate={[required, maxLength10]}/>\r\n        </div>\r\n        <div>\r\n            <button> Send</button>\r\n        </div>\r\n    </form>)\r\n}\r\n\r\nconst NewMessageReduxForm = reduxForm({form: 'newMessageForm'})(NewMessageForm)\r\n\r\nconst Dialogs = (props) => {\r\n\r\n    let sendMessage = (values) => {\r\n        props.onSendMessage(values.newMessageText);\r\n    }\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogsItem}>\r\n                {props.dialogs.map(d => <DialogItem name={d.name} id={d.id}/>)}\r\n            </div>\r\n\r\n            <div className={s.messages}>\r\n                {props.messages.map(m => <Message id={m.id} message={m.message}/>)}\r\n                <NewMessageReduxForm onSubmit={sendMessage}/>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dialogs;","import React from 'react';\r\nimport {onSendMessage, onChangeNewMessage} from '../../redux/dialogsReducer';\r\nimport Dialogs from './Dialogs';\r\nimport {connect} from 'react-redux';\r\nimport {withAuthRedirect} from '../hoc/withAuthRedirect';\r\nimport {compose} from 'redux';\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        dialogs: state.dialogsPage.dialogs,\r\n        messages: state.dialogsPage.messages,\r\n        newMessageText: state.dialogsPage.newMessageText,\r\n    }\r\n};\r\n\r\nexport default compose (\r\n    connect(mapStateToProps, {\r\n        onSendMessage,\r\n        onChangeNewMessage,\r\n    }),\r\n    withAuthRedirect,\r\n) (Dialogs);\r\n\r\n\r\n"],"sourceRoot":""}